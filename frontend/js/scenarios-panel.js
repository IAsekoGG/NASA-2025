// –ú–æ–¥—É–ª—å –ø–∞–Ω–µ–ª—ñ "–°—Ü–µ–Ω–∞—Ä—ñ—ó"
import { openArticle } from './articles.js';

export function initScenariosPanel() {
    const panel = document.getElementById('scenariosPanel');
    
    panel.innerHTML = `
        <div class="panel-header">
            <div class="panel-title">üé≠ –°—Ü–µ–Ω–∞—Ä—ñ—ó –ø–∞–¥—ñ–Ω–Ω—è</div>
        </div>
        
        <div class="panel-body">
            <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 12px;">
                <div class="card" data-scenario="water" onclick="selectScenario('water')">
                    <div class="card-title">
                        üåä –£ –≤–æ–¥—É
                        <button class="btn-info" onclick="event.stopPropagation(); openArticle('water-impact')">‚ÑπÔ∏è</button>
                    </div>
                    <div class="card-description">–¶—É–Ω–∞–º—ñ, –ø–∞—Ä–æ–≤—ñ –≤–∏–∫–∏–¥–∏</div>
                </div>
                
                <div class="card selected" data-scenario="ground" onclick="selectScenario('ground')">
                    <div class="card-title">
                        üèîÔ∏è –ù–∞ –∑–µ–º–ª—é
                        <button class="btn-info" onclick="event.stopPropagation(); openArticle('ground-impact')">‚ÑπÔ∏è</button>
                    </div>
                    <div class="card-description">–ö—Ä–∞—Ç–µ—Ä, —É–¥–∞—Ä–Ω–∞ —Ö–≤–∏–ª—è</div>
                </div>
                
                <div class="card" data-scenario="airburst" onclick="selectScenario('airburst')">
                    <div class="card-title">
                        üí• –í–∏–±—É—Ö –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ñ
                        <button class="btn-info" onclick="event.stopPropagation(); openArticle('airburst')">‚ÑπÔ∏è</button>
                    </div>
                    <div class="card-description">–ë–µ–∑ –∫—Ä–∞—Ç–µ—Ä–∞, –≤–µ–ª–∏–∫–∞ —Ö–≤–∏–ª—è</div>
                </div>
                
                <div class="card" data-scenario="fragmentation" onclick="selectScenario('fragmentation')">
                    <div class="card-title">üß© –†–æ–∑–∫–æ–ª</div>
                    <div class="card-description">–ö—ñ–ª—å–∫–∞ –º–∞–ª–∏—Ö —É–¥–∞—Ä—ñ–≤</div>
                </div>
            </div>
            
            <!-- –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏ —Å—Ü–µ–Ω–∞—Ä—ñ—é -->
            <div id="scenarioParams" class="mt-4"></div>
        </div>
    `;
    
    // –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –ø–æ—á–∞—Ç–∫–æ–≤–∏–π —Å—Ü–µ–Ω–∞—Ä—ñ–π
    setTimeout(() => showScenarioParams('ground'), 100);
}

window.selectScenario = function(scenario) {
    // –ó–Ω–∞–π—Ç–∏ –∫–∞—Ä—Ç–∫—É –ø–æ data-scenario
    const cards = document.querySelectorAll('#scenariosPanel .card');
    
    // –ó–Ω—è—Ç–∏ –≤–∏–¥—ñ–ª–µ–Ω–Ω—è –∑ —É—Å—ñ—Ö
    cards.forEach(c => c.classList.remove('selected'));
    
    // –í–∏–¥—ñ–ª–∏—Ç–∏ –≤–∏–±—Ä–∞–Ω—É
    const selectedCard = document.querySelector(`#scenariosPanel .card[data-scenario="${scenario}"]`);
    if (selectedCard) {
        selectedCard.classList.add('selected');
    }
    
    // –û–Ω–æ–≤–∏—Ç–∏ –≥–ª–æ–±–∞–ª—å–Ω–∏–π —Å—Ç–∞–Ω
    window.APP_STATE.currentScenario = scenario;
    
    console.log('üé≠ –û–±—Ä–∞–Ω–æ —Å—Ü–µ–Ω–∞—Ä—ñ–π:', scenario);
    
    // –ü–æ–∫–∞–∑–∞—Ç–∏ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
    showScenarioParams(scenario);
};

function showScenarioParams(scenario) {
    const paramsDiv = document.getElementById('scenarioParams');
    
    const params = {
        water: `
            <div class="p-4 bg-blue-50 rounded-lg">
                <div class="font-semibold mb-2">–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–∞–¥—ñ–Ω–Ω—è —É –≤–æ–¥—É:</div>
                <div class="input-group">
                    <label class="input-label">–ì–ª–∏–±–∏–Ω–∞ –æ–∫–µ–∞–Ω—É (–º)</label>
                    <input type="range" id="waterDepth" min="100" max="5000" value="2000" class="input-range">
                    <span id="waterDepthValue" class="input-value">2000 –º</span>
                </div>
            </div>
        `,
        ground: `
            <div class="p-4 bg-amber-50 rounded-lg">
                <div class="font-semibold mb-2">–ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –ø–∞–¥—ñ–Ω–Ω—è –Ω–∞ –∑–µ–º–ª—é:</div>
                <div class="input-group">
                    <label class="input-label">–¢–∏–ø “ë—Ä—É–Ω—Ç—É</label>
                    <select id="groundType" class="w-full p-2 border rounded">
                        <option value="rock">ü™® –°–∫–µ–ª—è—Å—Ç–∞ –ø–æ—Ä–æ–¥–∞</option>
                        <option value="sand">üèñÔ∏è –ü—ñ—Å–æ–∫</option>
                        <option value="soil">üå± “ê—Ä—É–Ω—Ç</option>
                    </select>
                </div>
            </div>
        `,
        airburst: `
            <div class="p-4 bg-orange-50 rounded-lg">
                <div class="font-semibold mb-2">–í–∏–±—É—Ö –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—ñ:</div>
                <div class="input-group">
                    <label class="input-label">–í–∏—Å–æ—Ç–∞ –≤–∏–±—É—Ö—É (–∫–º)</label>
                    <input type="range" id="burstAlt" min="5" max="50" value="15" class="input-range">
                    <span id="burstAltValue" class="input-value">15 –∫–º</span>
                </div>
            </div>
        `,
        fragmentation: `
            <div class="p-4 bg-purple-50 rounded-lg">
                <div class="font-semibold mb-2">–†–æ–∑–∫–æ–ª –Ω–∞ —à–º–∞—Ç–∫–∏:</div>
                <div class="input-group">
                    <label class="input-label">–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ñ–≤</label>
                    <input type="range" id="fragments" min="2" max="10" value="3" class="input-range">
                    <span id="fragmentsValue" class="input-value">3 —à—Ç</span>
                </div>
            </div>
        `
    };
    
    paramsDiv.innerHTML = params[scenario] || '';
    
    // –î–æ–¥–∞—Ç–∏ –æ–±—Ä–æ–±–Ω–∏–∫–∏ –¥–ª—è –Ω–æ–≤–∏—Ö —Å–ª–∞–π–¥–µ—Ä—ñ–≤
    const sliders = paramsDiv.querySelectorAll('input[type="range"]');
    sliders.forEach(slider => {
        slider.oninput = (e) => {
            const valueEl = document.getElementById(e.target.id + 'Value');
            if (valueEl) {
                const unit = valueEl.textContent.split(' ')[1];
                valueEl.textContent = e.target.value + ' ' + unit;
            }
        };
    });

    showScenarioParams('ground');
}

window.openArticle = openArticle;